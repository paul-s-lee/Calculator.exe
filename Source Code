using System;
using System.IO;
using System.Data;
using System.Text;
using System.Windows.Forms;
using System.Collections.Generic;

namespace Calculator
{
    public partial class MainForm : Form
    {
        public MainForm()
        {
            InitializeComponent();
        }

        // statement
        private List<string> Tray = new List<string>();

        // operands
        public void Zero_Click(object sender, EventArgs e)
        {
            Tray.Add("0");
            Answer.AppendText("0");
        }
        public void One_Click(object sender, EventArgs e) 
        {
            Tray.Add("1");
            Answer.AppendText("1");
        }
        public void Two_Click(object sender, EventArgs e)
        {
            Tray.Add("2");
            Answer.AppendText("2");
        }
        public void Three_Click(object sender, EventArgs e) 
        {
            Tray.Add("3");
            Answer.AppendText("3");
        }
        public void Four_Click(object sender, EventArgs e)
        {
            Tray.Add("4");
            Answer.AppendText("4");
        }
        public void Five_Click(object sender, EventArgs e)
        {
            Tray.Add("5");
            Answer.AppendText("5");
        }
        public void Six_Click(object sender, EventArgs e)
        {
            Tray.Add("6");
            Answer.AppendText("6");
        }
        public void Seven_Click(object sender, EventArgs e)
        {
            Tray.Add("7");
            Answer.AppendText("7");
        }
        public void Eight_Click(object sender, EventArgs e)
        {
            Tray.Add("8");
            Answer.AppendText("8");
        }
        public void Nine_Click(object sender, EventArgs e)
        {
            Tray.Add("9");
            Answer.AppendText("9");
        }

        // operators
        public void Minus_Click(object sender, EventArgs e)
        {
            Tray.Add("-");
            Answer.AppendText("-");
        }
        public void Plus_Click(object sender, EventArgs e)
        {
            Tray.Add("+");
            Answer.AppendText("+");
        }
        public void Divide_Click(object sender, EventArgs e)
        {
            Tray.Add("/");
            Answer.AppendText("/");
        }
        public void Multiply_Click(object sender, EventArgs e)
        {
            Tray.Add("*");
            Answer.AppendText("*");
        }

        // compute
        private void Enter_Click(object sender, EventArgs e)
        {
            if (String.IsNullOrEmpty(Answer.Text) == true)
            {
                ;
            }
            else
            {
                // convert tray list to string type
                string string_tray = string.Join("", Tray);
                string value = string.Empty;
                try
                {
                    // calculate expression
                    value = new DataTable().Compute(string_tray, null).ToString();
                }
                catch (Exception)
                {
                    MessageBox.Show("Invalid Syntax!", "Whoops!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                // show answer
                Answer.Text = value;
                MessageBox.Show(value, "Copied to Clipboard");
                // set to clipboard
                Clipboard.SetText(value);

                try
                {
                    // write to history
                    using (StreamWriter Writer = new StreamWriter(@"C:\calculation history.txt", true))
                    {
                        Writer.WriteLine(value);
                    }
                }
                catch (Exception)
                {
                    MessageBox.Show("Calculator.exe was unable to record your calculation to a text file. Please run program as admin to prevent this pop up from displaying again.", "I/O error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
                // clear object values
                string_tray = string.Empty;
                value = string.Empty;
                Tray.Clear();
                Answer.Clear();
            }
        }

        // clear statement
        private void Clear_Click(object sender, EventArgs e)
        {
            Tray.Clear();
            Answer.Clear();
        }

        public void Answer_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.D0)
            {
                Tray.Add("0");
                Answer.AppendText("0");
            }
            else if (e.KeyCode == Keys.D1)
            {
                Tray.Add("1");
                Answer.AppendText("1");
            }
            else if (e.KeyCode == Keys.D2)
            {
                Tray.Add("2");
                Answer.AppendText("2");
            }
            else if (e.KeyCode == Keys.D3)
            {
                Tray.Add("3");
                Answer.AppendText("3");
            }
            else if (e.KeyCode == Keys.D4)
            {
                Tray.Add("4");
                Answer.AppendText("4");
            }
            else if (e.KeyCode == Keys.D5)
            {
                Tray.Add("5");
                Answer.AppendText("5");
            }
            else if (e.KeyCode == Keys.D6)
            {
                Tray.Add("6");
                Answer.AppendText("6");
            }
            else if (e.KeyCode == Keys.D7)
            {
                Tray.Add("7");
                Answer.AppendText("7");
            }
            else if (e.KeyCode == Keys.D8)
            {
                Tray.Add("8");
                Answer.AppendText("8");
            }
            else if (e.KeyCode == Keys.D9)
            {
                Tray.Add("9");
                Answer.AppendText("9");
            }
            else if ((e.KeyCode == Keys.OemMinus) || (e.KeyCode == Keys.Subtract))
            {
                Tray.Add("-");
                Answer.AppendText("-");
            }
            else if ((e.KeyCode == Keys.Oemplus) || (e.KeyCode == Keys.Add))
            {
                Tray.Add("+");
                Answer.AppendText("+");
            }
            else if (e.KeyCode == Keys.D)
            {
                Tray.Add("/");
                Answer.AppendText("/");
            }
            else if (e.KeyCode == Keys.X)
            {
                Tray.Add("*");
                Answer.AppendText("x");
            }
            else if (e.KeyCode == Keys.Back)
            {
                try
                {
                    int max = Tray.Count;
                    Tray.RemoveAt(max - 1);
                    Answer.Text = Answer.Text.Remove(max - 1);
                    Answer.SelectionStart = Answer.Text.Length;
                    Answer.SelectionLength = 0;
                }
                catch(Exception)
                {
                    ;
                }
            }
            else if (e.KeyCode == Keys.Delete)
            {
                Tray.Clear();
                Answer.Clear();
            }
            else if (e.KeyCode == Keys.Enter)
            {
                if (String.IsNullOrEmpty(Answer.Text) == true)
                {
                    ;
                }
                else
                {
                    // convert tray list to string type
                    string string_tray = string.Join("", Tray);
                    string value = string.Empty;
                    try
                    {
                        // calculate expression
                        value = new DataTable().Compute(string_tray, null).ToString();
                    }
                    catch(Exception)
                    {
                        MessageBox.Show("Invalid Syntax!", "Whoops!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }
                    

                    // show answer
                    Answer.Text = value;
                    MessageBox.Show(value, "Copied to Clipboard");
                    // set to clipboard
                    Clipboard.SetText(value);

                    try
                    {
                        // write to history
                        using (StreamWriter Writer = new StreamWriter(@"C:\calculation history.txt", true))
                        {
                            Writer.WriteLine(value);
                        }
                    }
                    catch (Exception)
                    {
                        MessageBox.Show("Calculator.exe was unable to record your calculation to a text file. Please run program as admin to prevent this pop up from displaying again.", "I/O error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    }
                    // clear object values
                    string_tray = string.Empty;
                    value = string.Empty;
                    Tray.Clear();
                    Answer.Clear();
                }
            }
        }
    }
}
